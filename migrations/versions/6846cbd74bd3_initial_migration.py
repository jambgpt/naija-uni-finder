"""Initial migration

Revision ID: 6846cbd74bd3
Revises: 
Create Date: 2024-10-25 08:45:05.424374

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6846cbd74bd3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('course')
    op.drop_table('university')
    op.drop_table('transfer_log')
    op.drop_table('comment')
    op.drop_table('bookmark')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index('ix_user_score')

    op.drop_table('user')
    op.drop_table('vote')
    with op.batch_alter_table('feedback', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_feedback_user_id_user', 'users', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('feedback', schema=None) as batch_op:
        batch_op.drop_constraint('fk_feedback_user_id_user', type_='foreignkey')

    op.create_table('vote',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('comment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('vote_type', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='vote_pkey')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index('ix_user_score', ['score'], unique=False)

    op.create_table('bookmark',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('university_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_added', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='bookmark_pkey')
    )
    op.create_table('comment',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('date_posted', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('likes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dislikes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='comment_pkey')
    )
    op.create_table('transfer_log',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('table_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_transferred_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_transfer_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='transfer_log_pkey')
    )
    op.create_table('university',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('university_name', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('state', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('program_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('website', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('established', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='university_pkey')
    )
    op.create_table('course',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('course_name', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('university_name', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('abbrv', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('direct_entry_requirements', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('utme_requirements', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subjects', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='course_pkey')
    )
    # ### end Alembic commands ###
